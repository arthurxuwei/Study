1.代码写数据库的时候，要考虑数据库数据范围，避免data overflow 或者 data truncate

2.java中new <Object>() 要比 new HashMap<>()慢，对，是这样的，具体原因可以看源代码。但是并不是说
要用hashmap代替object作为传参。因为当用map.put时，效率就会大降。
而且，object结构要比hashmap清楚

3.注意transaction的propagation的区别，正常情况下可能看不出有什么区别。但是当发生异常是，区别就看出来了
  特别是事务嵌套的时候

4.一般json序列化工具并不强制要求json和object属性一一对应，可以很好的用这个特点，不过还是要将结构定义清楚

5.多看看优秀代码，今天看了下lxc的代码，其实并不复杂，有很多代码写的很漂亮

6.要注意数据库的事务隔离级别 （InnoDB默认是可重复读的（REPEATABLE READ））
查询全局和会话事务隔离级别：
SELECT @@global.tx_isolation;
SELECT @@session.tx_isolation;
SELECT @@tx_isolation;
===========================================================================================
       隔离级别               脏读（Dirty Read）  不可重复读（NonRepeatable Read）   幻读（Phantom Read） 
===========================================================================================
未提交读（Read uncommitted）        可能                    可能                     可能
已提交读（Read committed）          不可能                  可能                     可能
可重复读（Repeatable read）         不可能                  不可能                   可能
可串行化（Serializable ）           不可能                  不可能                   不可能
===========================================================================================

7.要深入理解事务ACID：
原子性， 一致性， 隔离性(隔离级别)， 持久性

8.AOP同一个类无效


9.代码层次一定要清楚，耦合了很麻烦