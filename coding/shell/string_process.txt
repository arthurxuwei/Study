#1 get string length
str="abcd"
expr length $str   # 4
echo ${#str}       # 4
expr "$str" : ".*" # 4

#2 substring index
str="abc"
expr index $str "a"  # 1
expr index $str "b"  # 2
expr index $str "x"  # 0
expr index $str ""   # 0

#3 substirng
str="abcdef"
expr substr "$str" 1 3  # abc
expr substr "$str" 2 5  # bcdef 
expr substr "$str" 4 5  # def
 
echo ${str:2}           # bcdef
echo ${str:2:3}         # bcd
echo ${str:(-6):5}      # abcde
echo ${str:(-4):3}      # cde

#4 slice
str="abbc,def,ghi,abcjkl"
echo ${str#a*c}     # ,def,ghi,abcjkl  
echo ${str##a*c}    # jkl
echo ${str#"a*c"}   # abbc,def,ghi,abcjkl
echo ${str##"a*c"}  # abbc,def,ghi,abcjkl
echo ${str#*a*c*}   # 
echo ${str##*a*c*}  # 
echo ${str#d*f)     # abbc,def,ghi,abcjkl, 
echo ${str#*d*f}    # ,ghi,abcjkl   
 
echo ${str%a*l}     # abbc,def,ghi  
echo ${str%%b*l}    # a    
echo ${str%a*c}     # abbc,def,ghi,abcjkl

#5 sub
str="apple, tree, apple tree"
echo ${str/apple/APPLE}   # first apple
echo ${str//apple/APPLE}  # all apple
 
echo ${str/#apple/APPLE}  # start with apple，则用APPLE替换它
echo ${str/%apple/APPLE}  # end with apple，则用APPLE替换它

#6 compare
[[ "a.txt" == a* ]]        # (pattern matching)
[[ "a.txt" =~ .*\.txt ]]   # (regex matching)
[[ "abc" == "abc" ]]       # (string comparision) 
[[ "11" < "2" ]]           # (string comparision), ascii

#7 cat
s1="hello"
s2="world"
echo ${s1}${s2}   # 