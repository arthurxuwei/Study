Object类中的函数有：
registerNatives/getClass/hashCode/equals/clone/
toString/notify/notifyAll/wait(timeout)/wait(timeout, nanos)
/wait/finalize

equals：
java 要求 equals方法有以下特点：
自反性:x.equals(x)
对称性:y.equals(x), x.equals(y)
传递性:x.equals(y), y.equals(z), z.equals(x)
一致性:x.equals(y),x.equals(y)
(x,y,z 均为非空引用)

hashCode:
一致性
特别注意：如果equals()相等，hashCode()一定相等，
如果hashCode()相等，equals()不一定相等

toString:
默认返回 getClass().getName() + '@' + Integer.toHexString(hashCode())

getClass:
返回该对象的运行时类

clone:
创建并返回此对象的一个副本
此方法执行的是该对象的“浅表复制”，而不“深层复制”操作
如果对象的类不支持 Cloneable 接口，则重写 clone 方法的子类也会抛出此异常，以指示无法克隆某个实例

notify/notifyAll:
唤醒在此对象监视器上等待的单个/所有线程

此方法只应由作为此对象监视器的所有者的线程来调用。通过以下三种方法之一，线程可以成为此对象监视器的所有者：
1.通过执行此对象的同步 (Sychronized) 实例方法。
2.通过执行此对象上同步 (synchronized) 语句的正文。
3.对于 Class 类型的对象，可以通过执行该类的同步静态方法。
一次只能有一个线程拥有对象的监视器。

wait：
导致当前的线程等待，直到其他线程调用此对象的 notify() 方法或 notifyAll() 方法，或者超过指定的时间量
当前的线程必须拥有此对象监视器。
特别注意：虚假唤醒

finalize:
当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法。
